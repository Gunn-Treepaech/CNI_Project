---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVWttZDVjOGtwTnRVSEVTVnl3eGJhakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl6TVRJeU5URXdNVGN6TWxvWApEVEkyTVRJeU5ERXdNVGN6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTVrdzdqeFQ4a2twN2szbFN6YlRCa0QKVkVwZVBtWVp6aFJuTGZTczFyem52bVArZ3RpeEloRmVtcDRraWRiLzc3VkRhK3pzTDc1dEI0a3FDR1ExK2lmcApGZnlLbmE0OC9TWU4xSUoxdVdtSEVtd3VqSHlHdFZ4RkpIWEZxZlVNSDNuR1pqaVdmdTZTU0tUaTJ6SlNKNFY2CjF3Z1VobUpjdkRzbklkbWM4MlFwRzNnNGdaYlRpM0tqc3BwOUlqd21MK2xmMzRLRTFpMXp6TG16LzlwdkR0VEgKZmpjUkdKMUl2b1ZnU3hLRHYvYnc5bVFtekFpeUZ1NnpOZCt4eFhTVjdWUWk3N1dXSERWUjh3bFlIV1hrSnh6VwpwZXFzdnFTcHlXcnlvSFR0STRLVnhlQzNxa1FHN2hHVHNveENpektDcnpHU0dDaTNhbXlMYVR3MEJQTU5SMGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlQ4UHpyYlpKZHlCVjlqdVExZgprMDJtSzQwQkp6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJV20vcU40Y2N2RXQ2Ui9GTjZkc1ZNQS9QYk96ClBTaURuWmFlUFZ2dDJwNEhjSHlocFBRaE96Q2lZdFdHRElRSTlMRzVoYVM4bmdxYmJFOGYzWElld25RM0hPeVUKRVRSL3ZRWGVEbHNGQnJ5dE9hRTlDbkJlTUtLdVBOajhSSEY1TFp6NVhsOU92UGFnZkprNDliK3phYjI3c042cwpERmJPd00yTDhaZG5kUzFKZit6b0FVTVNNVlBOdTJ3RkpPeHhWWmdocE9YK0J3MENtbGZhME8vOXFZSE0vMGVWCkpobVIwNXVja0JYVnpSWC96bjhyb05JR043T3pPSUswNnV1OUV1SmtCN1ZOSTl5NFc3Q3JnZ1dzUmFBT05ES3MKUVJkZDRhekJaaTIrUTR6SVltRU5nbXBsRUM4TzBMN2ZkbEY5d29lOThseTNwYmx2bjdiTEhMNy85QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBem1URHVQRlB5U1NudVRlVkxOdE1HUU5VU2w0K1pobk9GR2N0OUt6V3ZPZStZLzZDCjJMRWlFVjZhbmlTSjF2L3Z0VU5yN093dnZtMEhpU29JWkRYNkora1YvSXFkcmp6OUpnM1Vnblc1YVljU2JDNk0KZklhMVhFVWtkY1dwOVF3ZmVjWm1PSlorN3BKSXBPTGJNbEluaFhyWENCU0dZbHk4T3ljaDJaenpaQ2tiZURpQgpsdE9MY3FPeW1uMGlQQ1l2NlYvZmdvVFdMWFBNdWJQLzJtOE8xTWQrTnhFWW5VaStoV0JMRW9PLzl2RDJaQ2JNCkNMSVc3ck0xMzdIRmRKWHRWQ0x2dFpZY05WSHpDVmdkWmVRbkhOYWw2cXkrcEtuSmF2S2dkTzBqZ3BYRjRMZXEKUkFidUVaT3lqRUtMTW9Ldk1aSVlLTGRxYkl0cFBEUUU4dzFIUndJREFRQUJBb0lCQVFDMVNhTDFKdGo3Qjd4ZgpIeWhqM3pnSFhIcEVYR1dZengvSm9odW1wODV5M1dmSmN6dkJWRTFsVG1DbmVkYXRSOTlvcXhENGFUbENuWWdaCi9oYWkxeHFreGNLdk1aNXc5bGN4ZnNKajJUNEVLRVdSU28zUnI0MUx2OXZYcXNpdlduZW5RaEoxc0JOTVFLZVkKVlQ5T0F3Vjk1RGxPZXFEVGN6dFBCZjlnb3REUzd3aVFieGwrRU5XTFYxZVh5VGdEd2JKZTNFZXlSVHhLKyszTgpYMEhYVzRmOFRTdnZqNjdHVnFMM0dTNmNBRmFKaFFPWWhrWGt2aTRsc1RsT1Q3dHhyZzdFZkF1ZzJlWisxL2Q0ClZLNThNK1pDSlRNcG1sbjJtUHp6Tk43WHVLcDRRc3NjRzVnVkJKUUg2ejFQV0tmaFUrbExZeFo0dS9zSHRGYVoKZ01sdWxMTkJBb0dCQU41NWFaeVF4aTFzVm1NMXpLZ0k4MXNHSFdsTEtzSEFDWndTSjkydWlKRzVObW1HSjRiVgpXdWk5WWdURWYrcDBmZGdUWndsSmVxZDVHUm41SThyV0tPWW1uM2FoQjZDMjQ2ckNidzlCUXVPMHVVaFU4a0pvCjdjenpER2s5MmVkUmdyNkdualE2d3lIYkVIeVFSbjBqckxrQ29kWjYrSE5xakpUMS9XN0ErRjJuQW9HQkFPMSsKL29ZZHlRSHFIdlV6UGd4M2ZYK2xsRWxzRDB4cm9veTQ4SjdKWlBiS2o2M05sYmVPRUwxSWQxcWNEdVZvby9PMwozK0Z2eHQ2a245MFZFQXphMGdNSSt5aVZQS0swbTdzVUtjNTRKNCtHRzlJdmZId3ZST2xTa1BmV0VsdXlFM1E1CkZjemNERG5YZjRBOWUzazYxUlFPMWxrZHJ0NEVKN1M5Z1pleWR6MWhBb0dCQU5idlRjMXBRVTJaSVV6d0tTMGUKbUo0VUprNFh4Tk16Q1JXenBMaFRhclgremtiY3lVdEd6WEdWcGlFZEJzZ29pM3c2SW8yaVk5RncrWU5TWS9ZUApPYXhCSEVhc0JJYU1xeC9LZ1Ntbnowdld5anJMZHRJYU5jU1AvQ21oQytpam8wRVhKYmtvSEdXVkV6U0UzdFQvCnBsdUg0M3NuaXVsV3cwTVc5U1lQWU9SNUFvR0FOM3dXM0tCeXlJYTQ2dElvNmVLMHFEQzMzeHRteTVUTjZoQisKN3FuZ2M2UEpRM0tuU3JYZkJVbTcwS2hxOW4rbTVoYU1NRy9ieDBJd3N3YnJ0QVVmVVdRMHdUdDBhaExGMjBRUApyRlAzOGhrRHdPd2xLaUlrK0ZtNDBwM3B0aEI1YVFxNUpCNDRvUDdPbzlnNVU0NUNINmlEdlZnbzlXZUZHejIyCjNBanV3S0VDZ1lBRDdzYWNBQnlzc0ltemRqZ0g5czRqRzgrRG96cXBKZHl3V2M4VnA3SHdxcmdhRUtGUkpvOUMKSmo3WjVod2EzRUpYNnJKdUQ3TXpucnFPRzFXUXVXSENJUWdpcnZZcm9LLzZPWmpsS1lWVUFJaU82Unp5SXJnaQppcHUyV0lQeklNeGhpM2o4aTVzMVBSTVBIYUJ1ZG1OeGVGSnlaRmpSeUEwTmlvdWlIUHRFYVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVWttZDVjOGtwTnRVSEVTVnl3eGJhakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl6TVRJeU5URXdNVGN6TWxvWApEVEkyTVRJeU5ERXdNVGN6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTVrdzdqeFQ4a2twN2szbFN6YlRCa0QKVkVwZVBtWVp6aFJuTGZTczFyem52bVArZ3RpeEloRmVtcDRraWRiLzc3VkRhK3pzTDc1dEI0a3FDR1ExK2lmcApGZnlLbmE0OC9TWU4xSUoxdVdtSEVtd3VqSHlHdFZ4RkpIWEZxZlVNSDNuR1pqaVdmdTZTU0tUaTJ6SlNKNFY2CjF3Z1VobUpjdkRzbklkbWM4MlFwRzNnNGdaYlRpM0tqc3BwOUlqd21MK2xmMzRLRTFpMXp6TG16LzlwdkR0VEgKZmpjUkdKMUl2b1ZnU3hLRHYvYnc5bVFtekFpeUZ1NnpOZCt4eFhTVjdWUWk3N1dXSERWUjh3bFlIV1hrSnh6VwpwZXFzdnFTcHlXcnlvSFR0STRLVnhlQzNxa1FHN2hHVHNveENpektDcnpHU0dDaTNhbXlMYVR3MEJQTU5SMGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlQ4UHpyYlpKZHlCVjlqdVExZgprMDJtSzQwQkp6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJV20vcU40Y2N2RXQ2Ui9GTjZkc1ZNQS9QYk96ClBTaURuWmFlUFZ2dDJwNEhjSHlocFBRaE96Q2lZdFdHRElRSTlMRzVoYVM4bmdxYmJFOGYzWElld25RM0hPeVUKRVRSL3ZRWGVEbHNGQnJ5dE9hRTlDbkJlTUtLdVBOajhSSEY1TFp6NVhsOU92UGFnZkprNDliK3phYjI3c042cwpERmJPd00yTDhaZG5kUzFKZit6b0FVTVNNVlBOdTJ3RkpPeHhWWmdocE9YK0J3MENtbGZhME8vOXFZSE0vMGVWCkpobVIwNXVja0JYVnpSWC96bjhyb05JR043T3pPSUswNnV1OUV1SmtCN1ZOSTl5NFc3Q3JnZ1dzUmFBT05ES3MKUVJkZDRhekJaaTIrUTR6SVltRU5nbXBsRUM4TzBMN2ZkbEY5d29lOThseTNwYmx2bjdiTEhMNy85QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRZGdrWWpJNVFQOHgySFcvWWEzd3NaakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl6TVRJeU5URXdNVGN6TWxvWApEVEkyTVRJeU5ERXdNVGN6TWxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxWRHJpRFMKdEZCZVkrWFA2YjViNStPSndYVHFQY2pRTXl0Tk12Vjd3RCt2bzhlV2dhNWFZaTVvV1JmdnFMOU1vcUNHdDRrbQowN2FSc0JGR0VHaDN2Ly9yMk1SQk5oZ0NWT1U1ZGNRZUljRzJXNlRaRVhrKytBN0lOaUxKQ2VvMERrOTNwWU5UCmVKaVpCSWJ2bzVxODlmclY3NXFhc3NsL0lySFREK3hieU5jS2UwQVdwN0hkcnMwU2laUnFPemRCN1RmenVtUWEKbGtrNkxMSytaK0FVRGloN2hYcXI2OHo3RXZlUTA4M2tBSUFacHArVkhYNUY5TzdOckVMUE81YnpnUnFIWFMzdAppVkx2T0FNWWxFT1MvZzM2bjNtc1B0K1dOYisrN1h2WjZNRmxQZ2VuWUFpbDhDZU1SbzBJY0gwUGs1bzlFVVpICnZyaHlFdnlIdWIzb1ZpTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQovRDg2MjJTWGNnVmZZN2tOWDVOTnBpdU5BU2N3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXBUb1Y5MEJYZHZBWHY2ejgKMGlMSm1SYzl4dWR4VVdqSXlqbnNScnc0T3dMVXVOS3RpZUJvc0tibzlyekxmMVZhQ1pHWFphcDk3b0JSS0hlSgpTQUY4RWlQeS82bGhaS2dlNE5wU0Q3dUcrcFA0NjF6UFBmeUN6UExFaWxldUNrUVMyaWhjZDRoRVlrZ3BXb1BrCkZlVlEzZzRWa0lWWm1PZ1V2bXVNZERrSmdBUmxDQ01kY0ovT0xGZ25oQXppOUxKU2xRRjVMT2ttM1gvZDQ3NFQKS0wyWFlMeS91N0tLeHFjVlBqT0FFM0ZYbHloRzdoM2FsY1ZQZFE2byttNDVwaGFmUEJwd1VGQ29sVWFHNEVKbQpGYlZsNllPQ05MSC9DSjFFWGN2Ujdaa1RYbFU2Qkpadm1oSWN1Ykk5ZDlqTlErTDZDZjhVdzhicVhpMU1kelFuCjJDeWttUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFVPdUlOSzBVRjVqNWMvcHZsdm40NG5CZE9vOXlOQXpLMDB5OVh2QVA2K2p4NWFCCnJscGlMbWhaRisrb3YweWlvSWEzaVNiVHRwR3dFVVlRYUhlLy8rdll4RUUyR0FKVTVUbDF4QjRod2JaYnBOa1IKZVQ3NERzZzJJc2tKNmpRT1QzZWxnMU40bUprRWh1K2ptcnoxK3RYdm1wcXl5WDhpc2RNUDdGdkkxd3A3UUJhbgpzZDJ1elJLSmxHbzdOMEh0Ti9PNlpCcVdTVG9zc3I1bjRCUU9LSHVGZXF2cnpQc1M5NURUemVRQWdCbW1uNVVkCmZrWDA3czJzUXM4N2x2T0JHb2RkTGUySlV1ODRBeGlVUTVMK0RmcWZlYXcrMzVZMXY3N3RlOW5vd1dVK0I2ZGcKQ0tYd0o0eEdqUWh3ZlErVG1qMFJSa2UrdUhJUy9JZTV2ZWhXSXdJREFRQUJBb0lCQUc3SVhJWG5BUmtWZDB5ZgpVNlpxR1VGeGtmRFlzTVlvcVAxUUExTVJQU0F2UXBQYklvcmk1cHFpWDhGSFVnVUkyMlBzc2dONjNXMzVnSGd1Ck1CMEpBeWx3aFZ6ODFnaTZkQlJjbCtNeTMwSzdKeXVMRnlqWkdWWS9ld2FyaEFuRm92RmltSis0eGozTlYzejQKdlM3M1NnYng5YXl4MjQ5V3ltZVFMVzB4YzRBbytrLzRLK2N3ODRGU24yMjJtRFBlMWwyaDByWm16WWlMUy9YdQpxZzM4OTBxQWNncWJ1dWNRNnlHektJdWpSY1p1Wk1zZEo4aGtNcGQzdmZldW5GaEZpWGh6Mmc4a2dVcGR5REpGCnZnbDBKV3hER0wxQ3kwWlZVVjVFQTY1M0Y0WnljS2JJaEtBd1dWeHFLV1VVRzhGSDhJUnlvNjBMN2RpMFYrUzkKYmhPd09vRUNnWUVBM3RtWms3RElQeFNYVlZ1ZkQybFpkdytGN2tBeFYzVXQ2WjFzaC9NcmtpeDl0RFRGdjBDawpqUFdSTElwRnQ2K0p5WXlrUmlKa3lPUmpRazcwdnVmTVRlL3JtdVZJVXZSM1JBeWxhSVJFUTc3WHFuTUNpWEErCmg3WFJWQWU0WUlXL0dmRVN6c3ZQZW1pdFhFVDNtTzFRRVdBdEhJVUtsemlWTW1pZE9mdFhxSU1DZ1lFQTBEcHkKN2ZENDFrTVZiNDZrYytWaUlFNVhYOUZnUkJZUXdpTEo4VzhCSHd0ZTdLd3BteW83U0R6VjlGb05uUFBkNkR5SgpRY2MwSURGMi91YVlGSjAreVNJMjZaOXBPRjdPalc2VkhyQS9qOVJYbWxTR2pZSFpIcXVSNGpKNVQ3S29FN0ZpCmViMEsyL29pZGR4emQrWTg4bkdzTXVHSDFwRmZ1dm9STm5ncTZlRUNnWUVBeEFBczFEb3pGVkFkL2lRMFZOQzYKc0Q0RjlOT2UwaVlzK0lET0dSQm1MUTFXamkyd0V4TmU1dCtCRE9TY2h2OHNPQW1yM2tlWHp4MFl0QlJQckt5aApBNWRWNklscXdCTmw1b01jNUQwWThXQ2p2TFdrOEk2NVlKRW9pRGkyRUtieHVuWk9yWFdTaVQ0UjQ4cUEzbzh5CjBlVitKOHhYMFVNaDdoRVc0QTFSUHRNQ2dZRUFoSThCQlZybmZyZGNHUldzdVo4b2xicHB3elR1WE1uVFIxT1EKVGFQR0NmWmFLcjc3Q2EyYjZjUFl6T0xiVWJTcDZ5TkdtZHB2NDZLNXgxSVROT1JaeVArQUI4QVU0dTd2L1hlTgpkT2pzdmVxSERsZUxCT0RKME0yV1pIS1BhZDRwUThna0VhMzRFTXd2VGVyV2sxaStLZldWa3hxaU9FVjV0UFZuCktjN2NPdUVDZ1lBZDFvdUtlbWR5VUp2cDNQU2xmM3pQN1JXMEt3ZWhKTFYrbFJWd1o4QjgrZFc5aXEvWEQzb0sKTHNESGxLcmdxVjdMQXlmUzUxVkExV1Z3MEsyVTZHRGd4UCt4dVVBMWFpRDRPeXNySWdjdVVGa1lUMnVTbUNkUwpIdHNFZElERjNCYU1Ba01MY0p5eDJ1RnhUdVlhRW51bVBDeTBEeEVIVlh3WDg0aGZJeENNeXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "true"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.1.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumnodes
  - ciliumnodes/status
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: cilium
      kubernetes.io/cluster-service: "true"
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        kubernetes.io/cluster-service: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.12"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.12"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /var/snap/microk8s/6239/opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.11.12"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /var/snap/microk8s/6239/opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.12"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/snap/microk8s/6239/var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /var/snap/microk8s/6239/opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /var/snap/microk8s/6239/args/cni-network
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.12
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
